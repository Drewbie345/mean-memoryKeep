"use strict";var ApplicationConfiguration=function(){var e="mean";var t=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils"];var n=function(t){angular.module(t,[]);angular.module(e).requires.push(t)};return{applicationModuleName:e,applicationModuleVendorDependencies:t,registerModule:n}}();"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies);angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function(e){e.hashPrefix("!")}]);angular.element(document).ready(function(){if(window.location.hash==="#_=_")window.location.hash="#!";angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});"use strict";ApplicationConfiguration.registerModule("stories");"use strict";ApplicationConfiguration.registerModule("core");"use strict";ApplicationConfiguration.registerModule("users");"use strict";angular.module("stories").run(["Menus",function(e){e.addMenuItem("topbar","Stories","stories","dropdown","/stories(/create)?");e.addSubMenuItem("topbar","stories","List Stories","stories");e.addSubMenuItem("topbar","stories","New Story","stories/create")}]);"use strict";angular.module("stories").config(["$stateProvider",function(e){e.state("listStories",{url:"/stories",templateUrl:"modules/stories/views/list-stories.client.view.html"}).state("createStory",{url:"/stories/create",templateUrl:"modules/stories/views/create-story.client.view.html"}).state("viewStory",{url:"/stories/:storyId",templateUrl:"modules/stories/views/view-story.client.view.html"}).state("editStory",{url:"/stories/:storyId/edit",templateUrl:"modules/stories/views/edit-story.client.view.html"})}]);"use strict";angular.module("stories").controller("StoryController",["$scope","$stateParams","$location","Authentication","Stories",function(e,t,n,r,i){e.authentication=r;e.create=function(){var t=new i({title:this.title,content:this.content});t.$save(function(e){n.path("stories/"+e._id)},function(t){e.error=t.data.message});this.title="";this.content=""};e.remove=function(t){if(t){t.$remove();for(var r in e.stories){if(e.stories[r]===t){e.stories.splice(r,1)}}}else{e.stories.$remove(function(){n.path("stories")})}};e.update=function(){var t=e.story;t.$update(function(){n.path("stories/"+t._id)},function(t){e.error=t.data.message})};e.find=function(){e.stories=i.query()};e.findOne=function(){e.story=i.get({storyId:t.storyId})}}]);"use strict";angular.module("stories").factory("Stories",["$resource",function(e){return e("stories/:storyId",{storyId:"@_id"},{update:{method:"PUT"}})}]);"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/");e.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]);"use strict";angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function(e,t,n){e.authentication=t;e.isCollapsed=false;e.menu=n.getMenu("topbar");e.toggleCollapsibleMenu=function(){e.isCollapsed=!e.isCollapsed};e.$on("$stateChangeSuccess",function(){e.isCollapsed=false})}]);"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function(e,t){e.authentication=t}]);"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["user"];this.menus={};var e=function(e){if(e){for(var t in e.roles){for(var n in this.roles){if(this.roles[n]===e.roles[t]){return true}}}}else{return this.isPublic}return false};this.validateMenuExistance=function(e){if(e&&e.length){if(this.menus[e]){return true}else{throw new Error("Menu does not exists")}}else{throw new Error("MenuId was not provided")}return false};this.getMenu=function(e){this.validateMenuExistance(e);return this.menus[e]};this.addMenu=function(t,n,r){this.menus[t]={isPublic:n||false,roles:r||this.defaultRoles,items:[],shouldRender:e};return this.menus[t]};this.removeMenu=function(e){this.validateMenuExistance(e);delete this.menus[e]};this.addMenuItem=function(t,n,r,i,s,o,u){this.validateMenuExistance(t);this.menus[t].items.push({title:n,link:r,menuItemType:i||"item",menuItemClass:i,uiRoute:s||"/"+r,isPublic:o||this.menus[t].isPublic,roles:u||this.defaultRoles,items:[],shouldRender:e});return this.menus[t]};this.addSubMenuItem=function(t,n,r,i,s,o,u){this.validateMenuExistance(t);for(var a in this.menus[t].items){if(this.menus[t].items[a].link===n){this.menus[t].items[a].items.push({title:r,link:i,uiRoute:s||"/"+i,isPublic:o||this.menus[t].isPublic,roles:u||this.defaultRoles,shouldRender:e})}}return this.menus[t]};this.removeMenuItem=function(e,t){this.validateMenuExistance(e);for(var n in this.menus[e].items){if(this.menus[e].items[n].link===t){this.menus[e].items.splice(n,1)}}return this.menus[e]};this.removeSubMenuItem=function(e,t){this.validateMenuExistance(e);for(var n in this.menus[e].items){for(var r in this.menus[e].items[n].items){if(this.menus[e].items[n].items[r].link===t){this.menus[e].items[n].items.splice(r,1)}}}return this.menus[e]};this.addMenu("topbar")}]);"use strict";angular.module("users").config(["$httpProvider",function(e){e.interceptors.push(["$q","$location","Authentication",function(e,t,n){return{responseError:function(r){switch(r.status){case 401:n.user=null;t.path("signin");break;case 403:break}return e.reject(r)}}}])}]);"use strict";angular.module("users").config(["$stateProvider",function(e){e.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]);"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function(e,t,n,r){e.authentication=r;if(e.authentication.user)n.path("/");e.signup=function(){t.post("/auth/signup",e.credentials).success(function(t){e.authentication.user=t;n.path("/")}).error(function(t){e.error=t.message})};e.signin=function(){t.post("/auth/signin",e.credentials).success(function(t){e.authentication.user=t;n.path("/")}).error(function(t){e.error=t.message})}}]);"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function(e,t,n,r,i){e.user=i.user;if(!e.user)n.path("/");e.hasConnectedAdditionalSocialAccounts=function(t){for(var n in e.user.additionalProvidersData){return true}return false};e.isConnectedSocialAccount=function(t){return e.user.provider===t||e.user.additionalProvidersData&&e.user.additionalProvidersData[t]};e.removeUserSocialAccount=function(n){e.success=e.error=null;t.delete("/users/accounts",{params:{provider:n}}).success(function(t){e.success=true;e.user=i.user=t}).error(function(t){e.error=t.message})};e.updateUserProfile=function(){e.success=e.error=null;var t=new r(e.user);t.$update(function(t){e.success=true;i.user=t},function(t){e.error=t.data.message})};e.changeUserPassword=function(){e.success=e.error=null;t.post("/users/password",e.passwordDetails).success(function(t){e.success=true;e.passwordDetails=null}).error(function(t){e.error=t.message})}}]);"use strict";angular.module("users").factory("Authentication",[function(){var e=this;e._data={user:window.user};return e._data}]);"use strict";angular.module("users").factory("Users",["$resource",function(e){return e("users",{},{update:{method:"PUT"}})}])